# spring.application.name=testspring

# 내장 Tomcat 서버 포트 (기본값은 8080)
server.port=8088

# 뷰 리졸버(ViewResolver)가 JSP를 찾을 경로 지정
# 사용자에게 보여질 jsp 선택
spring.mvc.view.prefix =/WEB-INF/views/
spring.mvc.view.suffix =.jsp

# Oracle DB 연결 설정 (Mybatis 사용 전제)
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=hr
spring.datasource.password=hr
# hikariCP 커넥션 풀과 관계 없이 다른 커넥션 풀을 사용하고자 할 때

## HikariCP: Spring Boot의 기본 커넥션 풀 라이브러리
## 필요 시 명시적으로 hikari 설정 가능 (대부분 자동 설정됨)
# hikari connection pool
# # DB property Setting 
# spring.datasource.hikari.driver-class-name=
# spring.datasource.hikari.jdbc-url=
# spring.datasource.hikari.username=
# spring.datasource.hikari.password=
# hikaricp 쓰는 것이 권장됨

# Mybatis 설정
# 해당 경로에 있는 *Mapper.xml 파일과 *Mapper.java를 연결

# Mapper XML 파일 경로 (classpath 기준 또는 절대 경로)
mybatis.mapper-locations=/mappers/**/*Mapper.xml

# MyBatis 설정 파일 위치 (typeAlias 등 설정 포함)
# 입력 및 반환에 대한 타입 설정하는 파일
mybatis.config-location=classpath:/mybatis-config.xml

# jpa
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
# auto type : create, none, update
spring.jpa.hibernate.ddl-auto=create
# 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true
# 가독성 있는 포맷 형식
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true